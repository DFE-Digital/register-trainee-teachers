name: Reset sandbox database
concurrency: restore-sanitised-sandbox-database-with-vendors

on:
  workflow_dispatch:
    inputs:
      confirm:
        required: true
        type: boolean
        default: false

jobs:
  restore_sandbox:
    name: restore Database (sandbox)
    if: ${{ (github.event_name == 'workflow_dispatch' && github.event.inputs.confirm == 'true') }}
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      name: Checkout

    - uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS_SANDBOX }}

    - name: Download Sanitised Backup
      uses: dawidd6/action-download-artifact@v5
      with:
        workflow: database-backup.yml
        name: backup_sanitised

    - name: Install kubectl
      uses: azure/setup-kubectl@v4
      with:
        version: "v1.26.1" # default is latest stable

    - uses: DFE-Digital/github-actions/set-kubelogin-environment@master
      with:
        azure-credentials: ${{ secrets.AZURE_CREDENTIALS_SANDBOX }}

    - name: K8 setup
      shell: bash
      run: |
        make ci sandbox get-cluster-credentials
        make install-konduit

    - name: Restore backup to aks env database
      shell: bash
      run: |
        bin/konduit.sh -i backup_sanitised.sql.gz -c -t 7200 register-sandbox -- psql

    - name: Swap providers to vendor
      shell: bash
      run: |
        (kubectl -n bat-production exec -ti deployment/register-sandbox -- bundle exec rake vendor:create) >> vendor_create.txt

    - name: Check for Failure
      if: ${{ failure() }}
      uses: rtCamp/action-slack-notify@master
      env:
        SLACK_CHANNEL: twd_publish_register_tech
        SLACK_COLOR: '#ef5343'
        SLACK_ICON_EMOJI: ':github-logo:'
        SLACK_USERNAME: Register Trainee Teachers
        SLACK_TITLE: 'Reset :sadpit: database Failure'
        SLACK_MESSAGE: ':alert: Reset sandbox database failure for sadpit :sadparrot:'
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

    - name: Print out vendor_create.txt
      if: ${{ success() }}
      shell: bash
      run: |
        cat vendor_create.txt

    - name: Check for Success
      if: ${{ success() }}
      uses: rtCamp/action-slack-notify@master
      env:
        SLACK_CHANNEL: twd_publish_register_tech
        SLACK_COLOR: '#37d67a'
        SLACK_ICON_EMOJI: ':github-logo:'
        SLACK_USERNAME: Register Trainee Teachers
        SLACK_TITLE: 'Reset :sadpit: database Success'
        SLACK_MESSAGE: ':alert-green: Reset sandbox database success for sadpit :char-dance:'
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
