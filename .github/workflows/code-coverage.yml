name: Code Coverage

on:
  workflow_dispatch:
  schedule: # 01:00 UTC
    - cron: "0 1 * * *"
  push:
    branches:
      - codecoverage

jobs:
  build:
    name: Build
    env:
      DOCKER_IMAGE: ghcr.io/dfe-digital/register-trainee-teachers
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_HOSTNAME: localhost
    outputs:
      docker-image: ${{ env.DOCKER_IMAGE }}
      image-tag: ${{ env.IMAGE_TAG }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build
        uses: ./.github/actions/build/
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          slack-webhook: ${{ secrets.SLACK_WEBHOOK }}
          azure-credentials: ${{ secrets.AZURE_CREDENTIALS_REVIEW }}

  run-tests:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build
    env:
      COVERAGE: true
      DOCKER_IMAGE: ${{ needs.build.outputs.docker-image }}
      IMAGE_TAG: ${{ needs.build.outputs.image-tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Bring docker image up
        uses: ./.github/actions/bring-docker-image-up/
        with:
          azure-credentials: ${{ secrets.AZURE_CREDENTIALS_REVIEW }}
          docker-image: ${{ env.DOCKER_IMAGE }}
          image-tag: ${{ env.IMAGE_TAG }}

      - name: Setup tests dependencies on images
        shell: bash
        run: |
          docker compose exec -T web /bin/sh -c 'bundle config --local disable_exec_load true'
          docker compose exec -T web /bin/sh -c "yarn add jest@29.3.1"
          docker compose exec -T web /bin/sh -c "RAILS_ENV=test bundle exec rails assets:precompile"
          docker compose exec -T web /bin/sh -c 'apk add --no-cache graphviz'
          docker compose exec -T web /bin/sh -c 'apk add chromium chromium-chromedriver'
          docker compose exec -T web /bin/sh -c 'bundle exec rails db:create db:migrate'

      - name: Run tests
        uses: Wandalen/wretry.action@v3.5.0
        with:
          attempt_limit: 5
          command: |
            docker compose exec -T web /bin/sh -c 'COVERAGE=true bundle exec rspec'

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/backend/coverage.json
          flags: unittests
          name: codecov-umbrella
