name: Coverage tests

on:
  workflow_call:
    inputs:
      docker-image:
        required: true
        type: string
      image-tag:
        required: true
        type: string
      use-next-academic-year:
        required: true
        type: boolean

jobs:
  coverage_tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Bring docker image up
        uses: ./.github/actions/bring-docker-image-up/
        with:
          azure-credentials: ${{ secrets.AZURE_CREDENTIALS_REVIEW }}
          docker-image: ${{ inputs.docker-image}}
          image-tag: ${{ inputs.image-tag }}

      - name: Setup tests dependencies on images
        shell: bash
        run: |
          docker compose exec -T web /bin/sh -c 'bundle config --local disable_exec_load true'
          docker compose exec -T web /bin/sh -c 'bundle exec rake parallel:setup'
          docker compose exec -T web /bin/sh -c "yarn add jest@29.3.1"
          docker compose exec -T web /bin/sh -c "RAILS_ENV=test bundle exec rails assets:precompile"
          docker compose exec -T web /bin/sh -c 'apk add chromium chromium-chromedriver'

      - name: "${{ inputs.use-next-academic-year && 'Next academic year' || 'Current academic year' }} coverage tests"
        run: |
          docker compose exec -T web /bin/sh -c 'COVERAGE=true bundle exec --verbose rspec --pattern spec/**/*_spec.rb --exclude-pattern "spec/smoke/*_spec.rb"'
        env:
          USE_NEXT_ACADEMIC_YEAR: ${{ inputs.use-next-academic-year }}

      - name: Check for Failure
        uses: ./.github/actions/send-slack-notification/
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          slack-title: "${{ inputs.use-next-academic-year && 'Next academic year' || 'Current academic year' }} tests"
          slack-message: "':alert: ${{ inputs.use-next-academic-year &&  'Next academic year' || 'Current academic year'}}  coverage test failure on commit ${{env.IMAGE_TAG}} :sadpanda:"
          slack-webhook: ${{ secrets.SLACK_WEBHOOK }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/backend/coverage.json
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
