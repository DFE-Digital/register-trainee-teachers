Style/AndOr:
  EnforcedStyle: conditionals

Style/StringLiterals:
  Enabled: true
  EnforcedStyle: double_quotes

# sometimes reduce is fine
Style/EachWithObject:
  Enabled: false

# Pending cops
# These will be enabled by default at Rubocop 1.0
Style/HashEachMethods:
  Enabled: true

Style/HashTransformKeys:
  Enabled: true

Style/HashTransformValues:
  Enabled: true

# This cop has too many false positives (it also requires underscores for things that are not numbers)
Style/NumericLiterals:
  Enabled: false

# Sometimes it's easier to think about a negated if, for example `render_error if !model.valid?` vs `render_error unless model.valid?`
Style/NegatedIf:
  Enabled: false

# ü§∑‚Äç‚ôÇÔ∏è
Style/AsciiComments:
  Enabled: false

Style/ConditionalAssignment:
  Enabled: false

Style/SafeNavigation:
  Enabled: true

Style/TrailingCommaInHashLiteral:
  EnforcedStyleForMultiline: comma

Style/TrailingCommaInArrayLiteral:
  EnforcedStyleForMultiline: comma

Style/FrozenStringLiteralComment:
  Enabled: true
  SafeAutoCorrect: true

Style/TrailingCommaInArguments:
  EnforcedStyleForMultiline: comma

Style/BlockDelimiters:
  Enabled: false

Style/Documentation:
  Enabled: false

Style/FormatStringToken:
  EnforcedStyle: template
  Exclude:
    - app/helpers/geocode_helper.rb

Style/Alias:
  Enabled: false

Style/RegexpLiteral:
  Enabled: false
  EnforcedStyle: mixed
  AllowInnerSlashes: true

Style/IfUnlessModifier:
  Enabled: false

Style/GuardClause:
  Enabled: false

Style/ClassAndModuleChildren:
  Enabled: false

Style/AccessorGrouping:
  Enabled: false

Style/BisectedAttrAccessor:
  Enabled: true

Style/ExponentialNotation:
  Enabled: true

Style/RedundantAssignment:
  Enabled: false

Style/RedundantFetchBlock:
  Enabled: true

Style/RedundantRegexpCharacterClass:
  Enabled: true

Style/RedundantRegexpEscape:
  Enabled: false

Style/SlicingWithRange:
  Enabled: true

Style/KeywordParametersOrder:
  Enabled: false

Style/RedundantInitialize:
  Exclude:
    - app/components/notice_banner/view.rb

