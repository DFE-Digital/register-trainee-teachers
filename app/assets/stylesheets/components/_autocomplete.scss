@mixin autocomplete-set-width($max-width) {
  // Explicitly set font size on container so ex units work
  // Assumes all autocompletes are default size.
  // This matches govuk fixed width inputs which scale with
  // font size.
  @include govuk-font(19);

  // Set on govuk-selects and autocompletes (clear and non-clear)
  // There is no one selector currently we can target, so we target
  // both, then unset where we don't need.
  .govuk-select,
  .autocomplete__wrapper,
  .autocomplete-select-with-clear {
    max-width: $max-width !important;
  }

  // Unset on autocompletes clear button is used
  // Easier to unset than to have more complex selector above
  .autocomplete-select-with-clear .autocomplete__wrapper {
    max-width: inherit !important;
  }
}

// Custom width overrides so inputs can be fixed width regardless of resolution.
@include govuk-media-query($from: tablet) {
  .app-\!-autocomplete--max-width-three-quarters {
    @include autocomplete-set-width(50ex);
  }

  .app-\!-autocomplete--max-width-two-thirds {
    @include autocomplete-set-width(44ex);
  }

  .app-\!-autocomplete--max-width-one-half {
    @include autocomplete-set-width(33ex);
  }

  .app-\!-autocomplete--max-width-one-third {
    @include autocomplete-set-width(22ex);
  }

  .app-\!-autocomplete--max-width-one-quarter {
    @include autocomplete-set-width(17ex);
  }
}

.autocomplete__wrapper {
  @include govuk-typography-common();
  position: relative;
}

.autocomplete__hint,
.autocomplete__input {
  -webkit-appearance: none;
  border: $govuk-border-width-form-element solid $govuk-input-border-colour;
  border-radius: 0;
  box-sizing: border-box;
  margin-bottom: 0;
  width: 100%;
}

.autocomplete__input {
  background-color: transparent;
  padding: govuk-spacing(1);
  position: relative;
}

.autocomplete__hint {
  color: govuk-colour("mid-grey");
  position: absolute;
}

.autocomplete__input--focused {
  outline: $govuk-focus-width solid $govuk-focus-colour;
  outline-offset: 0;
  box-shadow: inset 0 0 0 $govuk-border-width-form-element;

  @include govuk-if-ie8 {
    border-width: $govuk-border-width-form-element * 2;
  }
}

.autocomplete__input--show-all-values {
  padding-right: (govuk-spacing(1) + 24px + govuk-spacing(2));
  cursor: pointer;
}

.autocomplete__dropdown-arrow-down {
  display: inline-block;
  height: 24px;
  position: absolute;
  right: govuk-spacing(2);
  top: govuk-spacing(2);
  width: 24px;
  pointer-events: none; // https://github.com/alphagov/accessible-autocomplete/issues/202
}

.autocomplete__menu {
  background-color: govuk-colour("white");
  border: $govuk-border-width-form-element solid $govuk-input-border-colour;
  border-top: 0;
  color: $govuk-text-colour;
  margin: 0;
  max-height: 342px;
  overflow-x: hidden;
  padding: 0;
  width: 100%;
  width: calc(100% - #{govuk-spacing(1)});
}

.autocomplete__menu--visible {
  display: block;
}

.autocomplete__menu--hidden {
  display: none;
}

.autocomplete__menu--overlay {
  box-shadow: rgba(0,0,0,.256863) 0 2px 6px;
  left: 0;
  position: absolute;
  top: 100%;
  z-index: 100;
}

.autocomplete__menu--inline {
  position: relative;
}

.autocomplete__option {
  border-bottom: solid govuk-colour("mid-grey");
  border-width: 1px 0;
  cursor: pointer;
  display: block;
  position: relative;
}

.autocomplete__option > * {
  pointer-events: none;
}

.autocomplete__option:first-of-type {
  border-top-width: 0;
}

.autocomplete__option:last-of-type {
  border-bottom-width: 0;
}

.autocomplete__option--odd {
  background-color: govuk-colour("light-grey");
}

.autocomplete__option--hint {
  display: block;
  color: $govuk-secondary-text-colour;
}

.autocomplete__option--focused,
.autocomplete__option:hover {
  background-color: govuk-colour("blue");
  border-color: govuk-colour("blue");
  color: govuk-colour("white");
  outline: 0;

  .autocomplete__option--hint {
    color: govuk-colour("white");
  }
}

.autocomplete__option--no-results {
  background-color: govuk-colour("light-grey");
  color: govuk-colour("dark-grey");
  cursor: not-allowed;
}

.autocomplete__hint,
.autocomplete__input,
.autocomplete__option {
  @include govuk-font(19);
}

.autocomplete__hint,
.autocomplete__option {
  padding: govuk-spacing(1);
}

.govuk-form-group--error {

  .autocomplete__input {
    border-color: $govuk-error-colour;
  }

  // Remove error colour when focused
  .autocomplete__input:focus,
  .autocomplete__input--focused {
    border-color: $govuk-input-border-colour;
  }
}
